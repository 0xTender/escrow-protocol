/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SwapERC20ForERC721Extension,
  SwapERC20ForERC721ExtensionInterface,
} from "../../../contracts/MultiSwap.sol/SwapERC20ForERC721Extension";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
    ],
    name: "EscrowAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "counter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiatorToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initiatorAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "counterToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "counterAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum SwapERC20ForERC721Extension.EscrowState",
        name: "state",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum SwapERC20ForERC721Extension.ExchangeType",
        name: "initiatorExchange",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum SwapERC20ForERC721Extension.ExchangeType",
        name: "counterExchange",
        type: "uint8",
      },
    ],
    name: "SwapStateChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "begin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "complete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "escrowAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "updateEscrowAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000ec138038062000ec18339818101604052810190620000379190620001d7565b80620000586200004c620000a160201b60201c565b620000a960201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000209565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019f8262000172565b9050919050565b620001b18162000192565b8114620001bd57600080fd5b50565b600081519050620001d181620001a6565b92915050565b600060208284031215620001f057620001ef6200016d565b5b60006200020084828501620001c0565b91505092915050565b610ca880620002196000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80634f7d85e8116100665780634f7d85e81461016e578063715018a61461019f5780638da5cb5b146101a9578063aab53d74146101c7578063f2fde38b146101f85761009e565b806301ffc9a7146100a35780630d5defa4146100d357806313cd0921146100f1578063150b7a021461012257806341e59c2814610152575b600080fd5b6100bd60048036038101906100b89190610650565b610214565b6040516100ca9190610698565b60405180910390f35b6100db61028e565b6040516100e891906106f4565b60405180910390f35b61010b600480360381019061010691906107d6565b6102b4565b6040516101199291906108da565b60405180910390f35b61013c60048036038101906101379190610a3a565b6102c1565b6040516101499190610acc565b60405180910390f35b61016c60048036038101906101679190610ae7565b6102d5565b005b61018860048036038101906101839190610b14565b610358565b6040516101969291906108da565b60405180910390f35b6101a7610364565b005b6101b1610378565b6040516101be91906106f4565b60405180910390f35b6101e160048036038101906101dc9190610b14565b6103a1565b6040516101ef9291906108da565b60405180910390f35b610212600480360381019061020d9190610ae7565b6103ad565b005b60007ff605b1bd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610287575061028682610430565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000606094509492505050565b600063150b7a0260e01b9050949350505050565b6102dd61049a565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2442191962f8c50b10334ee24125a16163923eeef4f44972cbbeef1f9952e028160405161034d91906106f4565b60405180910390a150565b60006060935093915050565b61036c61049a565b6103766000610518565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006060935093915050565b6103b561049a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b90610be6565b60405180910390fd5b61042d81610518565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6104a26105dc565b73ffffffffffffffffffffffffffffffffffffffff166104c0610378565b73ffffffffffffffffffffffffffffffffffffffff1614610516576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050d90610c52565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61062d816105f8565b811461063857600080fd5b50565b60008135905061064a81610624565b92915050565b600060208284031215610666576106656105ee565b5b60006106748482850161063b565b91505092915050565b60008115159050919050565b6106928161067d565b82525050565b60006020820190506106ad6000830184610689565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006106de826106b3565b9050919050565b6106ee816106d3565b82525050565b600060208201905061070960008301846106e5565b92915050565b610718816106d3565b811461072357600080fd5b50565b6000813590506107358161070f565b92915050565b6000819050919050565b61074e8161073b565b811461075957600080fd5b50565b60008135905061076b81610745565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261079657610795610771565b5b8235905067ffffffffffffffff8111156107b3576107b2610776565b5b6020830191508360018202830111156107cf576107ce61077b565b5b9250929050565b600080600080606085870312156107f0576107ef6105ee565b5b60006107fe87828801610726565b945050602061080f8782880161075c565b935050604085013567ffffffffffffffff8111156108305761082f6105f3565b5b61083c87828801610780565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015610884578082015181840152602081019050610869565b60008484015250505050565b6000601f19601f8301169050919050565b60006108ac8261084a565b6108b68185610855565b93506108c6818560208601610866565b6108cf81610890565b840191505092915050565b60006040820190506108ef6000830185610689565b818103602083015261090181846108a1565b90509392505050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61094782610890565b810181811067ffffffffffffffff821117156109665761096561090f565b5b80604052505050565b60006109796105e4565b9050610985828261093e565b919050565b600067ffffffffffffffff8211156109a5576109a461090f565b5b6109ae82610890565b9050602081019050919050565b82818337600083830152505050565b60006109dd6109d88461098a565b61096f565b9050828152602081018484840111156109f9576109f861090a565b5b610a048482856109bb565b509392505050565b600082601f830112610a2157610a20610771565b5b8135610a318482602086016109ca565b91505092915050565b60008060008060808587031215610a5457610a536105ee565b5b6000610a6287828801610726565b9450506020610a7387828801610726565b9350506040610a848782880161075c565b925050606085013567ffffffffffffffff811115610aa557610aa46105f3565b5b610ab187828801610a0c565b91505092959194509250565b610ac6816105f8565b82525050565b6000602082019050610ae16000830184610abd565b92915050565b600060208284031215610afd57610afc6105ee565b5b6000610b0b84828501610726565b91505092915050565b600080600060408486031215610b2d57610b2c6105ee565b5b6000610b3b86828701610726565b935050602084013567ffffffffffffffff811115610b5c57610b5b6105f3565b5b610b6886828701610780565b92509250509250925092565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610bd0602683610855565b9150610bdb82610b74565b604082019050919050565b60006020820190508181036000830152610bff81610bc3565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c3c602083610855565b9150610c4782610c06565b602082019050919050565b60006020820190508181036000830152610c6b81610c2f565b905091905056fea2646970667358221220b18c21987d305f806d94262af5e4a9d1c2f627bb16f9f5275cf6011708c3a7c264736f6c63430008120033";

type SwapERC20ForERC721ExtensionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapERC20ForERC721ExtensionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapERC20ForERC721Extension__factory extends ContractFactory {
  constructor(...args: SwapERC20ForERC721ExtensionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _escrowAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapERC20ForERC721Extension> {
    return super.deploy(
      _escrowAddress,
      overrides || {}
    ) as Promise<SwapERC20ForERC721Extension>;
  }
  override getDeployTransaction(
    _escrowAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_escrowAddress, overrides || {});
  }
  override attach(address: string): SwapERC20ForERC721Extension {
    return super.attach(address) as SwapERC20ForERC721Extension;
  }
  override connect(signer: Signer): SwapERC20ForERC721Extension__factory {
    return super.connect(signer) as SwapERC20ForERC721Extension__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapERC20ForERC721ExtensionInterface {
    return new utils.Interface(_abi) as SwapERC20ForERC721ExtensionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapERC20ForERC721Extension {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as SwapERC20ForERC721Extension;
  }
}
