/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  SwapWithDispute,
  SwapWithDisputeInterface,
} from "../../contracts/SwapWithDispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "DisputeRaised",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "DisputeResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "escrowAddress",
        type: "address",
      },
    ],
    name: "EscrowAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "counter",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiatorToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "initiatorAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "counterToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "counterAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum SwapWithDispute.EscrowState",
        name: "state",
        type: "uint8",
      },
    ],
    name: "SwapStateChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "begin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "cancel",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "cancelledSwaps",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "complete",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputeResolver",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "disputedSwaps",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "escrowAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
    ],
    name: "raiseDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "escrowId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
    ],
    name: "resolveDispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "swapStructs",
    outputs: [
      {
        internalType: "address",
        name: "initiator",
        type: "address",
      },
      {
        internalType: "address",
        name: "counter",
        type: "address",
      },
      {
        internalType: "address",
        name: "initiatorToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initiatorAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "counterToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "counterAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_escrowAddress",
        type: "address",
      },
    ],
    name: "updateEscrowAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162003157380380620031578339818101604052810190620000379190620001d7565b80620000586200004c620000a160201b60201c565b620000a960201b60201c565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000209565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200019f8262000172565b9050919050565b620001b18162000192565b8114620001bd57600080fd5b50565b600081519050620001d181620001a6565b92915050565b600060208284031215620001f057620001ef6200016d565b5b60006200020084828501620001c0565b91505092915050565b612f3e80620002196000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063623d313f11610097578063aab53d7411610066578063aab53d7414610286578063f0745995146102b7578063f2fde38b146102ed578063f5a3f4af14610309576100f5565b8063623d313f14610212578063715018a6146102425780638da5cb5b1461024c578063a5c1674e1461026a576100f5565b80632bd5be7f116100d35780632bd5be7f1461017957806334b25ee2146101a957806341e59c28146101c55780634f7d85e8146101e1576100f5565b806301ffc9a7146100fa5780630d5defa41461012a57806313cd092114610148575b600080fd5b610114600480360381019061010f9190611d3a565b610327565b6040516101219190611d82565b60405180910390f35b6101326103a1565b60405161013f9190611dde565b60405180910390f35b610162600480360381019061015d9190611ec0565b6103c7565b604051610170929190611fc4565b60405180910390f35b610193600480360381019061018e9190611ff4565b610837565b6040516101a09190611d82565b60405180910390f35b6101c360048036038101906101be919061204d565b610857565b005b6101df60048036038101906101da919061208d565b610955565b005b6101fb60048036038101906101f691906120ba565b6109d8565b604051610209929190611fc4565b60405180910390f35b61022c60048036038101906102279190611ff4565b610e40565b6040516102399190611d82565b60405180910390f35b61024a610e60565b005b610254610e74565b6040516102619190611dde565b60405180910390f35b610284600480360381019061027f9190611ff4565b610e9d565b005b6102a0600480360381019061029b91906120ba565b6111eb565b6040516102ae929190611fc4565b60405180910390f35b6102d160048036038101906102cc9190611ff4565b61160c565b6040516102e49796959493929190612129565b60405180910390f35b6103076004803603810190610302919061208d565b6116ce565b005b610311611751565b60405161031e9190611dde565b60405180910390f35b60007ff605b1bd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061039a575061039982611777565b5b9050919050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461045b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104529061220a565b60405180910390fd5b6000848481019061046c919061235e565b9050600073ffffffffffffffffffffffffffffffffffffffff16816040015173ffffffffffffffffffffffffffffffffffffffff16141580156104e05750600073ffffffffffffffffffffffffffffffffffffffff16816080015173ffffffffffffffffffffffffffffffffffffffff1614155b61051f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610516906123fd565b60405180910390fd5b60008160600151118015610537575060008160a00151115b610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d9061248f565b60405180910390fd5b806000015173ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff16146105e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105df90612521565b60405180910390fd5b428160c001511161062e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610625906125b3565b60405180910390fd5b61066387308360600151846040015173ffffffffffffffffffffffffffffffffffffffff166117e1909392919063ffffffff16565b806004600088815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816005015560c08201518160060155905050857fedb2ca3dec011aae6e9181a6777dd0aa591f6267b92d3dfecc8d197bc29bb7af826000015183602001518460400151856060015186608001518760a001518860c00151600160405161080f98979695949392919061264a565b60405180910390a2600160405180602001604052806000815250925092505094509492505050565b60036020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661089861186a565b73ffffffffffffffffffffffffffffffffffffffff16146108ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e59061273a565b60405180910390fd5b806005600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f5a87909bff68caaaaf0b3fd9c74eeccc928832f879315e5c6fb7a73612f26c0c826040516109499190611d82565b60405180910390a25050565b61095d611872565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fb2442191962f8c50b10334ee24125a16163923eeef4f44972cbbeef1f9952e02816040516109cd9190611dde565b60405180910390a150565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610a6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a639061220a565b60405180910390fd5b60008484810190610a7d9190611ff4565b90506000600460008381526020019081526020016000209050600015156003600084815260200190815260200160002060009054906101000a900460ff16151514610afd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af4906127cc565b60405180910390fd5b600015156005600084815260200190815260200160002060009054906101000a900460ff16151514610b64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b5b9061285e565b60405180910390fd5b8060060154421115610c07578060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610c02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf9906128f0565b60405180910390fd5b610c9a565b8060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614610c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9090612982565b60405180910390fd5b5b60016003600084815260200190815260200160002060006101000a81548160ff021916908315150217905550610d3d8160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600301548360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118f09092919063ffffffff16565b817fedb2ca3dec011aae6e9181a6777dd0aa591f6267b92d3dfecc8d197bc29bb7af8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301548660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16876005015488600601546003604051610e1898979695949392919061264a565b60405180910390a2600160405180602001604052806000815250935093505050935093915050565b60056020528060005260406000206000915054906101000a900460ff1681565b610e68611872565b610e726000611976565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460008381526020019081526020016000206040518060e00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382015481526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600582015481526020016006820154815250509050806000015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806110a25750806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b6110e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d890612a14565b60405180910390fd5b600015156003600084815260200190815260200160002060009054906101000a900460ff16151514611148576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113f90612aa6565b60405180910390fd5b8060c00151421061118e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161118590612b38565b60405180910390fd5b60016005600084815260200190815260200160002060006101000a81548160ff021916908315150217905550817f04901f83201c8724eadf084436db8aa391820bae6d11f9f78a17edb6f2eef3cf60405160405180910390a25050565b60006060600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461127f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112769061220a565b60405180910390fd5b600084848101906112909190611ff4565b905060006004600083815260200190815260200160002090508060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff161461133b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161133290612982565b60405180910390fd5b600015156005600084815260200190815260200160002060009054906101000a900460ff161515146113a2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113999061285e565b60405180910390fd5b61141b8160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163083600501548460040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166117e1909392919063ffffffff16565b6114928160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600301548360020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118f09092919063ffffffff16565b6115098160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682600501548360040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166118f09092919063ffffffff16565b817fedb2ca3dec011aae6e9181a6777dd0aa591f6267b92d3dfecc8d197bc29bb7af8260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168360010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301548660040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168760050154886006015460026040516115e498979695949392919061264a565b60405180910390a2600160405180602001604052806000815250935093505050935093915050565b60046020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060050154908060060154905087565b6116d6611872565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611745576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173c90612bca565b60405180910390fd5b61174e81611976565b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b611864846323b872dd60e01b85858560405160240161180293929190612bea565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a3a565b50505050565b600033905090565b61187a61186a565b73ffffffffffffffffffffffffffffffffffffffff16611898610e74565b73ffffffffffffffffffffffffffffffffffffffff16146118ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e590612c6d565b60405180910390fd5b565b6119718363a9059cbb60e01b848460405160240161190f929190612c8d565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611a3a565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000611a9c826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16611b019092919063ffffffff16565b9050600081511115611afc5780806020019051810190611abc9190612ccb565b611afb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611af290612d6a565b60405180910390fd5b5b505050565b6060611b108484600085611b19565b90509392505050565b606082471015611b5e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5590612dfc565b60405180910390fd5b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051611b879190612e63565b60006040518083038185875af1925050503d8060008114611bc4576040519150601f19603f3d011682016040523d82523d6000602084013e611bc9565b606091505b5091509150611bda87838387611be6565b92505050949350505050565b60608315611c48576000835103611c4057611c0085611c5b565b611c3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c3690612ec6565b60405180910390fd5b5b829050611c53565b611c528383611c7e565b5b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600082511115611c915781518083602001fd5b806040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611cc59190612ee6565b60405180910390fd5b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d1781611ce2565b8114611d2257600080fd5b50565b600081359050611d3481611d0e565b92915050565b600060208284031215611d5057611d4f611cd8565b5b6000611d5e84828501611d25565b91505092915050565b60008115159050919050565b611d7c81611d67565b82525050565b6000602082019050611d976000830184611d73565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611dc882611d9d565b9050919050565b611dd881611dbd565b82525050565b6000602082019050611df36000830184611dcf565b92915050565b611e0281611dbd565b8114611e0d57600080fd5b50565b600081359050611e1f81611df9565b92915050565b6000819050919050565b611e3881611e25565b8114611e4357600080fd5b50565b600081359050611e5581611e2f565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f840112611e8057611e7f611e5b565b5b8235905067ffffffffffffffff811115611e9d57611e9c611e60565b5b602083019150836001820283011115611eb957611eb8611e65565b5b9250929050565b60008060008060608587031215611eda57611ed9611cd8565b5b6000611ee887828801611e10565b9450506020611ef987828801611e46565b935050604085013567ffffffffffffffff811115611f1a57611f19611cdd565b5b611f2687828801611e6a565b925092505092959194509250565b600081519050919050565b600082825260208201905092915050565b60005b83811015611f6e578082015181840152602081019050611f53565b60008484015250505050565b6000601f19601f8301169050919050565b6000611f9682611f34565b611fa08185611f3f565b9350611fb0818560208601611f50565b611fb981611f7a565b840191505092915050565b6000604082019050611fd96000830185611d73565b8181036020830152611feb8184611f8b565b90509392505050565b60006020828403121561200a57612009611cd8565b5b600061201884828501611e46565b91505092915050565b61202a81611d67565b811461203557600080fd5b50565b60008135905061204781612021565b92915050565b6000806040838503121561206457612063611cd8565b5b600061207285828601611e46565b925050602061208385828601612038565b9150509250929050565b6000602082840312156120a3576120a2611cd8565b5b60006120b184828501611e10565b91505092915050565b6000806000604084860312156120d3576120d2611cd8565b5b60006120e186828701611e10565b935050602084013567ffffffffffffffff81111561210257612101611cdd565b5b61210e86828701611e6a565b92509250509250925092565b61212381611e25565b82525050565b600060e08201905061213e600083018a611dcf565b61214b6020830189611dcf565b6121586040830188611dcf565b612165606083018761211a565b6121726080830186611dcf565b61217f60a083018561211a565b61218c60c083018461211a565b98975050505050505050565b7f457363726f77457874656e73696f6e3a204f6e6c7920657363726f7720636f6e60008201527f74726163742063616e2063616c6c20746869732066756e6374696f6e00000000602082015250565b60006121f4603c83611f3f565b91506121ff82612198565b604082019050919050565b60006020820190508181036000830152612223816121e7565b9050919050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61226782611f7a565b810181811067ffffffffffffffff821117156122865761228561222f565b5b80604052505050565b6000612299611cce565b90506122a5828261225e565b919050565b600060e082840312156122c0576122bf61222a565b5b6122ca60e061228f565b905060006122da84828501611e10565b60008301525060206122ee84828501611e10565b602083015250604061230284828501611e10565b604083015250606061231684828501611e46565b606083015250608061232a84828501611e10565b60808301525060a061233e84828501611e46565b60a08301525060c061235284828501611e46565b60c08301525092915050565b600060e0828403121561237457612373611cd8565b5b6000612382848285016122aa565b91505092915050565b7f537761704552433230457874656e73696f6e3a20746f6b656e732063616e6e6f60008201527f74206265207a65726f2061646472657373000000000000000000000000000000602082015250565b60006123e7603183611f3f565b91506123f28261238b565b604082019050919050565b60006020820190508181036000830152612416816123da565b9050919050565b7f537761704552433230457874656e73696f6e3a20616d6f756e74732063616e6e60008201527f6f74206265207a65726f00000000000000000000000000000000000000000000602082015250565b6000612479602a83611f3f565b91506124848261241d565b604082019050919050565b600060208201905081810360008301526124a88161246c565b9050919050565b7f537761704552433230457874656e73696f6e3a2073656e646572206d7573742060008201527f626520696e69746961746f72546f6b656e000000000000000000000000000000602082015250565b600061250b603183611f3f565b9150612516826124af565b604082019050919050565b6000602082019050818103600083015261253a816124fe565b9050919050565b7f537761704552433230457874656e73696f6e3a20646561646c696e65206d757360008201527f7420626520696e20667574757265000000000000000000000000000000000000602082015250565b600061259d602e83611f3f565b91506125a882612541565b604082019050919050565b600060208201905081810360008301526125cc81612590565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110612613576126126125d3565b5b50565b600081905061262482612602565b919050565b600061263482612616565b9050919050565b61264481612629565b82525050565b600061010082019050612660600083018b611dcf565b61266d602083018a611dcf565b61267a6040830189611dcf565b612687606083018861211a565b6126946080830187611dcf565b6126a160a083018661211a565b6126ae60c083018561211a565b6126bb60e083018461263b565b9998505050505050505050565b7f5377617057697468446973707574653a206f6e6c79206469737075746520726560008201527f736f6c7665722063616e207265736f6c76652064697370757465000000000000602082015250565b6000612724603a83611f3f565b915061272f826126c8565b604082019050919050565b6000602082019050818103600083015261275381612717565b9050919050565b7f537761704552433230457874656e73696f6e3a207377617020616c726561647960008201527f2063616e63656c6c656400000000000000000000000000000000000000000000602082015250565b60006127b6602a83611f3f565b91506127c18261275a565b604082019050919050565b600060208201905081810360008301526127e5816127a9565b9050919050565b7f537761704552433230457874656e73696f6e3a2073776170206973206469737060008201527f7574656400000000000000000000000000000000000000000000000000000000602082015250565b6000612848602483611f3f565b9150612853826127ec565b604082019050919050565b600060208201905081810360008301526128778161283b565b9050919050565b7f537761704552433230457874656e73696f6e3a2073656e646572206d7573742060008201527f626520696e69746961746f720000000000000000000000000000000000000000602082015250565b60006128da602c83611f3f565b91506128e58261287e565b604082019050919050565b60006020820190508181036000830152612909816128cd565b9050919050565b7f537761704552433230457874656e73696f6e3a2073656e646572206d7573742060008201527f626520636f756e74657200000000000000000000000000000000000000000000602082015250565b600061296c602a83611f3f565b915061297782612910565b604082019050919050565b6000602082019050818103600083015261299b8161295f565b9050919050565b7f5377617057697468446973707574653a206f6e6c7920696e69746961746f722060008201527f6f7220636f756e7465722063616e207261697365206469737075746500000000602082015250565b60006129fe603c83611f3f565b9150612a09826129a2565b604082019050919050565b60006020820190508181036000830152612a2d816129f1565b9050919050565b7f5377617057697468446973707574653a207377617020616c726561647920636160008201527f6e63656c6c656400000000000000000000000000000000000000000000000000602082015250565b6000612a90602783611f3f565b9150612a9b82612a34565b604082019050919050565b60006020820190508181036000830152612abf81612a83565b9050919050565b7f5377617057697468446973707574653a20646561646c696e6520616c7265616460008201527f7920706173736564000000000000000000000000000000000000000000000000602082015250565b6000612b22602883611f3f565b9150612b2d82612ac6565b604082019050919050565b60006020820190508181036000830152612b5181612b15565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000612bb4602683611f3f565b9150612bbf82612b58565b604082019050919050565b60006020820190508181036000830152612be381612ba7565b9050919050565b6000606082019050612bff6000830186611dcf565b612c0c6020830185611dcf565b612c19604083018461211a565b949350505050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000612c57602083611f3f565b9150612c6282612c21565b602082019050919050565b60006020820190508181036000830152612c8681612c4a565b9050919050565b6000604082019050612ca26000830185611dcf565b612caf602083018461211a565b9392505050565b600081519050612cc581612021565b92915050565b600060208284031215612ce157612ce0611cd8565b5b6000612cef84828501612cb6565b91505092915050565b7f5361666545524332303a204552433230206f7065726174696f6e20646964206e60008201527f6f74207375636365656400000000000000000000000000000000000000000000602082015250565b6000612d54602a83611f3f565b9150612d5f82612cf8565b604082019050919050565b60006020820190508181036000830152612d8381612d47565b9050919050565b7f416464726573733a20696e73756666696369656e742062616c616e636520666f60008201527f722063616c6c0000000000000000000000000000000000000000000000000000602082015250565b6000612de6602683611f3f565b9150612df182612d8a565b604082019050919050565b60006020820190508181036000830152612e1581612dd9565b9050919050565b600081519050919050565b600081905092915050565b6000612e3d82612e1c565b612e478185612e27565b9350612e57818560208601611f50565b80840191505092915050565b6000612e6f8284612e32565b915081905092915050565b7f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000600082015250565b6000612eb0601d83611f3f565b9150612ebb82612e7a565b602082019050919050565b60006020820190508181036000830152612edf81612ea3565b9050919050565b60006020820190508181036000830152612f008184611f8b565b90509291505056fea26469706673582212209d9a71e1ebd404b69367526d457997db53e70e01002185b74034a8d85cebd82364736f6c63430008120033";

type SwapWithDisputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SwapWithDisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SwapWithDispute__factory extends ContractFactory {
  constructor(...args: SwapWithDisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _escrowAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SwapWithDispute> {
    return super.deploy(
      _escrowAddress,
      overrides || {}
    ) as Promise<SwapWithDispute>;
  }
  override getDeployTransaction(
    _escrowAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_escrowAddress, overrides || {});
  }
  override attach(address: string): SwapWithDispute {
    return super.attach(address) as SwapWithDispute;
  }
  override connect(signer: Signer): SwapWithDispute__factory {
    return super.connect(signer) as SwapWithDispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapWithDisputeInterface {
    return new utils.Interface(_abi) as SwapWithDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapWithDispute {
    return new Contract(address, _abi, signerOrProvider) as SwapWithDispute;
  }
}
